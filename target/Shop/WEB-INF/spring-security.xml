<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="by.bsuir.shop.service"/>
    <context:annotation-config/>

	<http auto-config="true" use-expressions="true" authentication-manager-ref="authenticationManager">
		<intercept-url pattern="/admin/products" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/admin/users" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/registration" access="hasRole('ROLE_ANONYMOUS')"/>
        <intercept-url pattern="/login" access="hasRole('ROLE_ANONYMOUS')"/>
		<access-denied-handler error-page="/403" />
		<form-login 
		    login-page="/login" 
		    default-target-url="/home"
			authentication-failure-url="/login?error" 
			username-parameter="username"
			password-parameter="password" />
		<logout logout-success-url="/login?logout" />
		<csrf />
	</http>

	<authentication-manager id="authenticationManager">
		<authentication-provider user-service-ref="myUserDetailsService" >
			<!--<password-encoder hash="" />-->
		</authentication-provider>
	</authentication-manager>

    <!--
		Provides automatic CSRF token inclusion when using Spring MVC Form tags or Thymeleaf. See
		http://localhost:8080/#forms and form.jsp for examples
	-->
    <beans:bean name="requestDataValueProcessor" class="org.springframework.security.web.servlet.support.csrf.CsrfRequestDataValueProcessor"/>

    <!--
		CSRF protection. Here we only include the CsrfFilter instead of all of Spring Security.
		See http://docs.spring.io/spring-security/site/docs/3.2.x/reference/htmlsingle/#csrf for more information on
		Spring Security's CSRF protection
	-->
    <beans:bean id="csrfFilter" class="org.springframework.security.web.csrf.CsrfFilter">
        <beans:constructor-arg>
            <beans:bean class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository">
                <beans:property name="headerName" value="X-SECURITY" />
            </beans:bean>
        </beans:constructor-arg>
    </beans:bean>

</beans:beans>
